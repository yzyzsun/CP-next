type Hex = { hex : String };

type ColorSig<Color> = {
  Black   : Color;
  Silver  : Color;
  Gray    : Color;
  White   : Color;
  Maroon  : Color;
  Red     : Color;
  Purple  : Color;
  Fuchsia : Color;
  Green   : Color;
  Lime    : Color;
  Olive   : Color;
  Yellow  : Color;
  Navy    : Color;
  Blue    : Color;
  Teal    : Color;
  Aqua    : Color;
};

color = trait implements ColorSig<Hex> => {
  (Black).hex   = "#000000";
  (Silver).hex  = "#C0C0C0";
  (Gray).hex    = "#808080";
  (White).hex   = "#FFFFFF";
  (Maroon).hex  = "#800000";
  (Red).hex     = "#FF0000";
  (Purple).hex  = "#800080";
  (Fuchsia).hex = "#FF00FF";
  (Green).hex   = "#008000";
  (Lime).hex    = "#00FF00";
  (Olive).hex   = "#808000";
  (Yellow).hex  = "#FFFF00";
  (Navy).hex    = "#000080";
  (Blue).hex    = "#0000FF";
  (Teal).hex    = "#008080";
  (Aqua).hex    = "#00FFFF";
};

type GraphicSig<Graphic><Color> = {
  Graph : { width: Int; height: Int } -> Graphic -> Graphic;
  Line : { x1: Int; y1: Int; x2: Int; y2: Int; color: Color; width: Int } -> Graphic;
  Rect : { x: Int; y: Int; width: Int; height: Int; color: Color } -> Graphic;
  Circle : { cx: Int; cy: Int; r: Int; color: Color } -> Graphic;
  Ellipse : { cx: Int; cy: Int; rx: Int; ry: Int; color: Color } -> Graphic;
  Path : { d: String; fill: Color; stroke: Color; width: Int } -> Graphic;
  Text : { x: Int; y: Int; color: Color } -> Graphic -> Graphic;
  Use : String -> String -> Graphic;
  Group : String -> Graphic -> Graphic;
  Defs : Graphic -> Graphic;
};

type HTML = { html : String };
svg = trait implements GraphicSig<HTML><Hex> => {
  (Graph {..} e).html = "<svg width=\"" ++ toString width ++ "\" height=\"" ++ toString height ++ "\" font-size=\"10\">" ++ e.html ++ "</svg>";
  (Line {..}).html = "<line x1=\"" ++ toString x1 ++ "\" y1=\"" ++ toString y1 ++ "\" x2=\"" ++ toString x2 ++ "\" y2=\"" ++ toString y2 ++ "\" stroke=\"" ++ color.hex ++ "\" stroke-width=\"" ++ toString width ++ "\" />";
  (Rect {..}).html = "<rect x=\"" ++ toString x ++ "\" y=\"" ++ toString y ++ "\" width=\"" ++ toString width ++ "\" height=\"" ++ toString height ++ "\" fill=\"" ++ color.hex ++ "\" />";
  (Circle {..}).html = "<circle cx=\"" ++ toString cx ++ "\" cy=\"" ++ toString cy ++ "\" r=\"" ++ toString r ++ "\" fill=\"" ++ color.hex ++ "\" />";
  (Ellipse {..}).html = "<ellipse cx=\"" ++ toString cx ++ "\" cy=\"" ++ toString cy ++ "\" rx=\"" ++ toString rx ++ "\" ry=\"" ++ toString ry ++ "\" fill=\"" ++ color.hex ++ "\" />";
  (Path {..}).html = "<path d=\"" ++ d ++ "\" fill=\"" ++ fill.hex ++ "\" stroke=\"" ++ stroke.hex ++ "\" stroke-width=\"" ++ toString width ++ "\" />";
  (Text {..} e).html = "<text x=\"" ++ toString x ++ "\" y=\"" ++ toString y ++ "\" fill=\"" ++ color.hex ++ "\">" ++ e.html ++ "</text>";
  (Use id tr).html = "<use href=\"#" ++ id ++ "\" transform=\"" ++ tr ++ "\" />";
  (Group id e).html = "<g id=\"" ++ id ++ "\">" ++ e.html ++ "</g>";
  (Defs e).html = "<defs>" ++ e.html ++ "</defs>";
};
